
@using TheLottoApp.Models
@model BasicGeneratorModel
@{
    ViewBag.Title = "Basic";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Ajax.BeginForm("GenerateBasic", "NumberGenerator", new AjaxOptions() { OnSuccess = "getresult", HttpMethod = "post" }, new { enctype = "multipart/form-data", @class = "form form-horizontal", data_toggle = "validator" }))
{   
        <div class="container">
            <nav aria-label="breadcrumb" role="navigation">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="/home">Home</a></li>
                    <li class="breadcrumb-item"><a href="/NumberGenerator/ShowSelection">Select Calculator</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Basic Calculator</li>
                </ol>
            </nav>

            <div id="secondaryContainer">
                <h2>Basic Calculator</h2>
            </div>
            <div class="row">
                    <div class="form-group">
                        <div class="col-md-3">
                                <img src="~/Content/Media/str_Balanced.gif" alt="Balanced" class="img-thumbnail img-check">
                                @Html.CheckBoxFor(x=>x.balanced, new { @id = "Balanced", @class = "hidden", @autocomplete = "off" })
                                <i class="selection-tick">&#10003;</i>
                        </div>
                        <div class="col-md-3">
                                <img src="~/Content/Media/str_best_score.gif" alt="BestScore" class="img-thumbnail img-check">
                                @Html.CheckBoxFor(x => x.bestScore, new { @id = "BestScore", @class = "hidden", @autocomplete = "off" })
                            <i class="selection-tick">&#10003;</i>

                        </div>
                        <div class="col-md-3">
                                <img src="~/Content/Media/str_hot_numbers.gif" alt="HotNumbers" class="img-thumbnail img-check">
                                @Html.CheckBoxFor(x => x.hotNumbers, new { @id = "HotNumbers", @class = "hidden", @autocomplete = "off" })
                            <i class="selection-tick">&#10003;</i>
                        </div>
                        <div class="col-md-3">
                                <img src="~/Content/Media/str_zero_repeats.gif" alt="ZeroRepeats" class="img-thumbnail img-check">
                                @Html.CheckBoxFor(x => x.zeroRepeats, new { @id = "ZeroRepeats", @class = "hidden", @autocomplete = "off" })
                            <i class="selection-tick">&#10003;</i>
                        </div>
                    </div> 
                <hr />
                    <div class="form-group">
                        <label class="col-md-5 control-label" for="age">Number of Tickets</label>
                        <div class="col-md-7">
                            @Html.TextBoxFor(x => x.NumberOfGames, new { @type = "number", @class = "form-control input-sm", @placeholder = "0" })
                        </div>
                   </div>
                    <div class="form-group">
                        <label class="col-md-5 control-label" for="age">System</label>
                        <div class="col-md-7">
                            @Html.TextBoxFor(x => x.system, new { @type = "number", @class = "form-control input-sm", @placeholder = "0" })
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-3 col-md-4">
                            <input type="submit" value="Generate" class="btn pull-right btn-primary btn-lg" id="calculate">
                        </div>
                    </div>
                             
            </div>
        </div>
}
<div class="row">
    <div id="GeneratedSetWrapper">
    </div>
</div>
<style type="text/css">
    .check
        {
            opacity:0.6;
	        background-color:#1f35a5;
	
         }
    #GeneratedSetWrapper{
        margin:0 auto;
        width:700px;
    }

    .img-thumbnail {
        cursor:pointer;
    }
</style>
<script type="text/javascript" src="~/Scripts/jquery-1.10.2.min.js"></script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/bootstrap-slider.min.js")
    @Scripts.Render("~/bundles/jqueryunob")
<script type="text/javascript">
    $(document).ready(function (e) {
        $(".img-check").click(function () {
            $(this).parent().parent().find('.check').not(this).removeClass('check');
            if ($(this).hasClass('check')) {
                $(this).removeClass("check");
            } else {
                $(this).addClass("check");
            }
            
            //$(this).parent().parent().find('.selection-tick').removeClass('selection-tick');
            //$(this).next().next().next('.selection-tick').toggle();
        });
    });
    $('.hidden').on('change', function () {
        $('.hidden').not(this).prop('checked', false);

    });
    function getresult(data) {
        var myNode = document.getElementById("GeneratedSetWrapper");
        while (myNode.firstChild) {
            myNode.removeChild(myNode.firstChild);
        }
        if (typeof data.GeneratedSet != 'string') {
            if (data != null || data != "Server Error!!!") {

                for (i = 0; i < data.GeneratedSet.length; i++) {
                    var wrapper = document.createElement('div');
                    wrapper.setAttribute('id', 'generated_number');
                    var spanWrapper = "";
                    $.each(data.GeneratedSet[i], function (index, val) {
                        spanWrapper += "<span class='number'>" + val + "</span>\n";
                    })
                    wrapper.innerHTML = spanWrapper;
                    $('#GeneratedSetWrapper').append(wrapper);
                }

            }
        } else {
            $('#GeneratedSetWrapper').append("<div class='alert alert-danger'>" + data.GeneratedSet + "</div>");
        };
        $("html, body").animate({ scrollTop: 0 }, 200);

    };
</script>
          }