@using TheLottoApp.Models
@model NumberGeneratorViewModel
@{
    ViewBag.Title = "Lotto Number Generator";
}
@*<script src="~/Scripts/Custom/RangeSlider.js"></script>
<link rel="stylesheet" type="text/css" href="~/Content/Custom/RangeSlider.css" />*@
<link href="~/css/bootstrap-slider.min.css" rel="stylesheet" />


<!--Calculator Area-->
<hr />




<div class="container calculatorContainer">
    <div class="row">
        <div class="col-md-6 effect8">
            <div class="panel panel-primary">
                <div class="panel-heading">
                   <label>Pick your choices</label>
                </div>
                <div class="panel-body">
                    @using (Ajax.BeginForm("GenerateNumber", "NumberGenerator", new AjaxOptions() { OnSuccess = "getresult", HttpMethod = "post" }, new { enctype = "multipart/form-data", @class = "form form-horizontal", data_toggle = "validator" }))
                    {
                        @Html.AntiForgeryToken();
                        <div class="form-group">
                            <label class="col-md-5 control-label" for="age">I want to play</label>
                            <div class="col-md-7">
                                <div class="btn-group">
                                    <select name="" id="" class="btn btn-success" required="">
                                        <option value="">Select</option>
                                        <option value="1">Monday Lotto</option>
                                        <option value="2" selected>OZ Lotto</option>
                                        <option value="3">Wednesday Lotto</option>
                                        <option value="4">Powerball</option>
                                        <option value="5">Saturday TattsLotto</option>
                                        <option value="6">Set for Life</option>
                                        <option value="7">The Pools</option>
                                        <option value="8">Super 66</option>
                                        <option value="9">Cash 3</option>

                                    </select>
                                </div>
                                </div>
                            </div>
                            <hr />
                        <div class="form-group">
                            <label class="col-md-5 control-label" for="age">Number of Odds</label>
                            <div class="col-md-7">
                                @Html.TextBoxFor(x => x.NumberOfOdds, new { @type = "number", @class = "form-control input-sm", @placeholder = "0" }) 
                               <label class="numberOfOddsLabel">Doesn't matter</label> <input class="numberOfOddsInput checkbox-primary" type="checkbox" value="doesnt matter" name="doenst matter"/>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-md-5 control-label" for="salary">Numbers below 15</label>
                            <div class="col-md-7">
                                @Html.TextBoxFor(x => x.NumbersBelow15, new { @type = "number", @class = "form-control input-sm", @placeholder = "0" })
                                <label class="numberOfOddsLabel">Doesn't matter</label> <input class="numberOfOddsInput" type="checkbox" value="doesnt matter" name="doenst matter" />
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-md-5 control-label" for="retire">Numbers between 15 and 30</label>
                            <div class="col-md-7">
                                @Html.TextBoxFor(x => x.NumbersBelow15And30, new { @type = "number", @class = "form-control input-sm", @value = "-1", @placeholder = "0" })          
                                <label class="numberOfOddsLabel">Doesn't matter</label> <input class="numberOfOddsInput" type="checkbox" value="doesnt matter" name="doenst matter" />
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-md-5 control-label" for="retire">Numbers above 30</label>
                            <div class="col-md-7">
                                @Html.TextBoxFor(x => x.NumbersAbove30, new { @type = "number", @class = "form-control input-sm", @value = "-1", @placeholder = "0" })
                                
                                <label class="numberOfOddsLabel">Doesn't matter</label> <input class="numberOfOddsInput" type="checkbox" value="doesnt matter" name="doenst matter" />
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-md-5 control-label" for="contribution">Score Range</label>
                            <div class="col-md-7">
                                @*<b>1.8&nbsp;&nbsp;</b> <input id="slider-input" name="slider-input" type="text" class="span2" value="" data-slider-min="0.018" 
                                   data-slider-max="0.0265" data-slider-step="0.002" data-slider-value="[0.018,0.0265]" />
                                 <b>&nbsp;&nbsp;2.65</b>*@
                                <b>1.8&nbsp;&nbsp;</b> @Html.TextBoxFor(x => x.ScoreRange, new { id = "slider-input", @type = "text",
                                                      @class = "form-control", @value = "", data_slider_min = "0.018",
                                               data_slider_max = "0.028", data_slider_step = "0.002", data_slider_value = "[0.018,0.028]" })
                                <b>&nbsp;&nbsp;2.65</b>
                                <label class="numberOfOddsLabel">Doesn't matter</label>
                                 <input class="numberOfOddsRange" type="checkbox" value="doesnt matter" name="doenst matter" />
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-md-5 control-label" for="status">Number of previous repeat</label>
                            <div class="col-md-7">
                                @Html.TextBoxFor(x => x.NumbersOfPreviousRepeat, new { @type = "number", @class = "form-control input-sm", @value = "-1", @placeholder = "0" })
                               
                                <label class="numberOfOddsLabel">Doesn't matter</label> <input class="numberOfOddsInput" type="checkbox" value="doesnt matter" name="doenst matter" />
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-md-5 control-label" for="owner">Numbers to include</label>
                            <div class="col-md-7">
                                <input class="form-control input-sm" name="numberstoinclude" type="text" placeholder="Enter comma separated data" id="numberstoinclude"  />
                                <div class="help-block with-errors"></div>
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-md-5 control-label" for="owner">Numbers to exclude</label>
                            <div class="col-md-7">
                                <input class="form-control input-sm" name="numberstoexclude" type="text" placeholder="Enter comma separated data" id="numberstoexclude"  />
                                <div class="help-block with-errors"></div>
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-md-5 control-label" for="downsize">System</label>
                            <div class="col-md-7">
                                @Html.TextBoxFor(x => x.System, new { @type = "number", @class = "form-control input-sm", @value = "1", min="7", max = "20", @placeholder = "10" })
                                
                                <div class="help-block with-errors"></div>
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-md-5 control-label" for="downsize">Number of games</label>
                            <div class="col-md-7">
                                @Html.TextBoxFor(x => x.NumberOfGames, new { @type = "number", @class = "form-control input-sm", @value = "10", min="1", @placeholder = "10" })
                                
                                <div class="help-block with-errors"></div>
                            </div>
                        </div>

                        <div class="form-group">
                            <div class="col-md-offset-3 col-md-4">
                                <input type="submit" value="Generate" class="btn pull-right btn-primary btn-lg" id="calculate">
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
        <div class="col-md-5 col-md-offset-1">
            <div id="GeneratedSetWrapper">

            </div>

            </div>
            </div>
        </div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/Scripts/bootstrap-slider.min.js")
    @Scripts.Render("~/bundles/jqueryunob")
<script>
    $('#slider-input').slider({});
      
    $(".numberOfOddsInput").click(function () {
        $(this).parent().children('input').val(-1);
        if ($('.numberOfOddsInput').is(':checked')) {
            $('#txt').val('checked');
            $(this).parent().children('input').first().val("-1");
        }
        else {
            $(this).parent().children('input').first().val("0");
        }
        $(this).parent().children('input').first().toggle("disabled");
        
    })
    $(".numberOfOddsRange").click(function () {
        $(this).val(-1);
        $('#slider-input').toggle('disabled');
            $(this).parent().children().not(this).toggle("disabled");
        
    })

    function getresult(data) {
        var myNode = document.getElementById("GeneratedSetWrapper");
        while (myNode.firstChild) {
            myNode.removeChild(myNode.firstChild);
        }
        if (typeof data.GeneratedSet != 'string') {
            if (data != null || data != "Server Error!!!") {
                
                for (i = 0; i < data.GeneratedSet.length; i++) {
                    var wrapper = document.createElement('div');
                    wrapper.setAttribute('id', 'generated_number');
                    var spanWrapper = "";
                    $.each(data.GeneratedSet[i], function (index, val) {
                        spanWrapper += "<span class='number'>" + val + "</span>\n";
                    })
                    wrapper.innerHTML = spanWrapper;
                    $('#GeneratedSetWrapper').append(wrapper);
                }

            }
        } else  {
            $('#GeneratedSetWrapper').append("<div class='alert alert-danger'>"+data.GeneratedSet+"</div>");
        };
        $("html, body").animate({ scrollTop: 0 }, 200);
       
    };
   
    </script>
}

